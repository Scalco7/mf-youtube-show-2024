version: "3.8"

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app
    env_file:
      - .env

  back:
    build:
      context: ./back
      dockerfile: Dockerfile
    volumes:
      - ./back:/app
      - /app/node_modules
    ports:
      - "${BACK_PORT}:${BACK_PORT}"
    networks:
      - app
    command: npm start
    depends_on:
      - mongodb
    env_file:
      - .env

  bff:
    build:
      context: ./bff
      dockerfile: Dockerfile
    volumes:
      - ./bff:/app
      - /app/node_modules
    ports:
      - "${BFF_PORT}:${BFF_PORT}"
    networks:
      - app
    command: npm start
    depends_on:
      - back
    env_file:
      - .env

  drawer:
    build:
      context: ./drawer
      dockerfile: Dockerfile
    volumes:
      - ./drawer:/app
      - /app/node_modules
    ports:
      - "${DRAWER_PORT}:${DRAWER_PORT}"
    networks:
      - app
    command: npm run start
    env_file:
      - .env

  root:
    build:
      context: ./root
      dockerfile: Dockerfile
    volumes:
      - ./root:/app
      - /app/node_modules
    ports:
      - "${ROOT_PORT}:${ROOT_PORT}"
    networks:
      - app
    command: npm run start
    env_file:
      - .env

  videos:
    build:
      context: ./videos
      dockerfile: Dockerfile
    volumes:
      - ./videos:/app
      - /app/node_modules
    ports:
      - "${VIDEOS_PORT}:${VIDEOS_PORT}"
    networks:
      - app
    command: npm run start
    env_file:
      - .env

  not-found:
    build:
      context: ./404
      dockerfile: Dockerfile
    volumes:
      - ./404:/app
      - /app/node_modules
    ports:
      - "${NOT_FOUND_PORT}:${NOT_FOUND_PORT}"
    networks:
      - app
    command: npm run start
    env_file:
      - .env

networks:
  app:
    driver: bridge

volumes:
  mongo-data:
